name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:

  test:     
    runs-on: ubuntu-latest      
    steps:       
      - name: Checkout repository         
        uses: actions/checkout@v2  

      - name: test case         
        run:            
          echo "Run the test here....."
          
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create version.txt
        run: |
          export PACKAGE_JSON_VERSION=$(cat src/package.json | jq -r .version)
          export VERSION=$PACKAGE_JSON_VERSION.${GITHUB_RUN_ID}
          echo $VERSION > version.txt
          echo $VERSION
      
      - name: Upload version.txt as artifact
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt
      

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          IMAGE_NAME: nodejs-app
        run: |
          export VERSION=$(cat version.txt)
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$VERSION ./src
          docker push $ECR_REGISTRY/$IMAGE_NAME:$VERSION
          echo "image=$ECR_REGISTRY/$IMAGE_NAME:$VERSION" >>$GITHUB_OUTPUT
      
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: nodejs-task-defination.json
          container-name: nodejs-app
          image: ${{ steps.build-image.outputs.image }}    
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition}}
          service: nodejs-web
          cluster: dev-cluster
          wait-for-service-stability: true    
         